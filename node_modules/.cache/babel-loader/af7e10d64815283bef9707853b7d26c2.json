{"ast":null,"code":"import _slicedToArray from \"/home/rosa/Desktop/admin/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rosa/Desktop/admin/demo1/src/app/pages/auth/Login.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { TextField } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport * as auth from \"../../store/ducks/auth.duck\";\nimport { login } from \"../../crud/auth.crud\";\n\nfunction Login(props) {\n  var _this = this;\n\n  var intl = props.intl;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    paddingRight: \"2.5rem\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loadingButtonStyle = _useState4[0],\n      setLoadingButtonStyle = _useState4[1];\n\n  var enableLoading = function enableLoading() {\n    setLoading(true);\n    setLoadingButtonStyle({\n      paddingRight: \"3.5rem\"\n    });\n  };\n\n  var disableLoading = function disableLoading() {\n    setLoading(false);\n    setLoadingButtonStyle({\n      paddingRight: \"2.5rem\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-login__signup-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Don't have an account yet?\"), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/auth/registration\",\n    className: \"kt-link kt-login__signup-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Sign Up!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"AUTH.LOGIN.TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"admin@demo.com\",\n      password: \"demo\"\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        // https://github.com/formatjs/react-intl/blob/master/docs/API.md#injection-api\n        errors.email = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = intl.formatMessage({\n          id: \"AUTH.VALIDATION.INVALID_FIELD\"\n        });\n      }\n\n      if (!values.password) {\n        errors.password = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      enableLoading();\n      setTimeout(function () {\n        login(values.email, values.password).then(function (_ref2) {\n          var accessToken = _ref2.data.accessToken;\n          disableLoading();\n          props.login(accessToken);\n        }).catch(function () {\n          disableLoading();\n          setSubmitting(false);\n          setStatus(intl.formatMessage({\n            id: \"AUTH.VALIDATION.INVALID_LOGIN\"\n          }));\n        });\n      }, 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        status = _ref3.status,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"kt-form\",\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, status ? /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, status)) : /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"Use account \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 35\n      }\n    }, \"admin@demo.com\"), \" and password\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }, \"demo\"), \" to continue.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"email\",\n      label: \"Email\",\n      margin: \"normal\",\n      className: \"kt-width-full\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.email,\n      helperText: touched.email && errors.email,\n      error: Boolean(touched.email && errors.email),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"password\",\n      margin: \"normal\",\n      label: \"Password\",\n      className: \"kt-width-full\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.password,\n      helperText: touched.password && errors.password,\n      error: Boolean(touched.password && errors.password),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-login__actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/forgot-password\",\n      className: \"kt-link kt-login__link-forgot\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"AUTH.GENERAL.FORGOT_BUTTON\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"kt_login_signin_submit\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      className: \"btn btn-primary btn-elevate kt-login__btn-primary \".concat(clsx({\n        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\n      })),\n      style: loadingButtonStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, \"Sign In\")));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"http://facebook.com\",\n    className: \"btn btn-primary kt-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-facebook-f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }), \"Facebook\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"http://twitter.com\",\n    className: \"btn btn-info kt-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }), \"Twitter\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"google.com\",\n    className: \"btn btn-danger kt-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }), \"Google\")))));\n}\n\nexport default injectIntl(connect(null, auth.actions)(Login));","map":{"version":3,"sources":["/home/rosa/Desktop/admin/demo1/src/app/pages/auth/Login.js"],"names":["React","useState","Link","Formik","connect","FormattedMessage","injectIntl","TextField","clsx","auth","login","Login","props","intl","loading","setLoading","paddingRight","loadingButtonStyle","setLoadingButtonStyle","enableLoading","disableLoading","email","password","values","errors","formatMessage","id","test","setStatus","setSubmitting","setTimeout","then","accessToken","data","catch","status","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Boolean","actions"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport * as auth from \"../../store/ducks/auth.duck\";\r\nimport { login } from \"../../crud/auth.crud\";\r\n\r\nfunction Login(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingButtonStyle, setLoadingButtonStyle] = useState({\r\n    paddingRight: \"2.5rem\"\r\n  });\r\n\r\n  const enableLoading = () => {\r\n    setLoading(true);\r\n    setLoadingButtonStyle({ paddingRight: \"3.5rem\" });\r\n  };\r\n\r\n  const disableLoading = () => {\r\n    setLoading(false);\r\n    setLoadingButtonStyle({ paddingRight: \"2.5rem\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"kt-login__head\">\r\n        <span className=\"kt-login__signup-label\">\r\n          Don't have an account yet?\r\n        </span>\r\n        &nbsp;&nbsp;\r\n        <Link to=\"/auth/registration\" className=\"kt-link kt-login__signup-link\">\r\n          Sign Up!\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"kt-login__body\">\r\n        <div className=\"kt-login__form\">\r\n          <div className=\"kt-login__title\">\r\n            <h3>\r\n              {/* https://github.com/formatjs/react-intl/blob/master/docs/Components.md#formattedmessage */}\r\n              <FormattedMessage id=\"AUTH.LOGIN.TITLE\" />\r\n            </h3>\r\n          </div>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              email: \"admin@demo.com\",\r\n              password: \"demo\"\r\n            }}\r\n            validate={values => {\r\n              const errors = {};\r\n\r\n              if (!values.email) {\r\n                // https://github.com/formatjs/react-intl/blob/master/docs/API.md#injection-api\r\n                errors.email = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n              ) {\r\n                errors.email = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n                });\r\n              }\r\n\r\n              if (!values.password) {\r\n                errors.password = intl.formatMessage({\r\n                  id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n                });\r\n              }\r\n\r\n              return errors;\r\n            }}\r\n            onSubmit={(values, { setStatus, setSubmitting }) => {\r\n              enableLoading();\r\n              setTimeout(() => {\r\n                login(values.email, values.password)\r\n                  .then(({ data: { accessToken } }) => {\r\n                    disableLoading();\r\n                    props.login(accessToken);\r\n                  })\r\n                  .catch(() => {\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    setStatus(\r\n                      intl.formatMessage({\r\n                        id: \"AUTH.VALIDATION.INVALID_LOGIN\"\r\n                      })\r\n                    );\r\n                  });\r\n              }, 1000);\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              status,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting\r\n            }) => (\r\n              <form\r\n                noValidate={true}\r\n                autoComplete=\"off\"\r\n                className=\"kt-form\"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                {status ? (\r\n                  <div role=\"alert\" className=\"alert alert-danger\">\r\n                    <div className=\"alert-text\">{status}</div>\r\n                  </div>\r\n                ) : (\r\n                  <div role=\"alert\" className=\"alert alert-info\">\r\n                    <div className=\"alert-text\">\r\n                      Use account <strong>admin@demo.com</strong> and password{\" \"}\r\n                      <strong>demo</strong> to continue.\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group\">\r\n                  <TextField\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    margin=\"normal\"\r\n                    className=\"kt-width-full\"\r\n                    name=\"email\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    helperText={touched.email && errors.email}\r\n                    error={Boolean(touched.email && errors.email)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <TextField\r\n                    type=\"password\"\r\n                    margin=\"normal\"\r\n                    label=\"Password\"\r\n                    className=\"kt-width-full\"\r\n                    name=\"password\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                    helperText={touched.password && errors.password}\r\n                    error={Boolean(touched.password && errors.password)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"kt-login__actions\">\r\n                  <Link\r\n                    to=\"/auth/forgot-password\"\r\n                    className=\"kt-link kt-login__link-forgot\"\r\n                  >\r\n                    <FormattedMessage id=\"AUTH.GENERAL.FORGOT_BUTTON\" />\r\n                  </Link>\r\n\r\n                  <button\r\n                    id=\"kt_login_signin_submit\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    className={`btn btn-primary btn-elevate kt-login__btn-primary ${clsx(\r\n                      {\r\n                        \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": loading\r\n                      }\r\n                    )}`}\r\n                    style={loadingButtonStyle}\r\n                  >\r\n                    Sign In\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n\r\n          <div className=\"kt-login__divider\">\r\n            <div className=\"kt-divider\">\r\n              <span />\r\n              <span>OR</span>\r\n              <span />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"kt-login__options\">\r\n            <Link to=\"http://facebook.com\" className=\"btn btn-primary kt-btn\">\r\n              <i className=\"fab fa-facebook-f\" />\r\n              Facebook\r\n            </Link>\r\n            <Link to=\"http://twitter.com\" className=\"btn btn-info kt-btn\">\r\n              <i className=\"fab fa-twitter\" />\r\n              Twitter\r\n            </Link>\r\n            <Link to=\"google.com\" className=\"btn btn-danger kt-btn\">\r\n              <i className=\"fab fa-google\" />\r\n              Google\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    null,\r\n    auth.actions\r\n  )(Login)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}