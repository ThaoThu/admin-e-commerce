{"ast":null,"code":"var _jsxFileName = \"/home/rosa/Desktop/admin/demo1/src/app/pages/auth/Registration.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Checkbox, FormControlLabel, TextField } from \"@material-ui/core\";\nimport * as auth from \"../../store/ducks/auth.duck\";\nimport { register } from \"../../crud/auth.crud\";\n\nfunction Registration(props) {\n  var _this = this;\n\n  var intl = props.intl;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"AUTH.REGISTER.TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      fullname: \"\",\n      username: \"\",\n      password: \"\",\n      acceptTerms: true,\n      confirmPassword: \"\"\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = intl.formatMessage({\n          id: \"AUTH.VALIDATION.INVALID_FIELD\"\n        });\n      }\n\n      if (!values.fullname) {\n        errors.fullname = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      }\n\n      if (!values.username) {\n        errors.username = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      }\n\n      if (!values.password) {\n        errors.password = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      }\n\n      if (!values.confirmPassword) {\n        errors.confirmPassword = intl.formatMessage({\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n        });\n      } else if (values.password !== values.confirmPassword) {\n        errors.confirmPassword = \"Password and Confirm Password didn't match.\";\n      }\n\n      if (!values.acceptTerms) {\n        errors.acceptTerms = \"Accept Terms\";\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      register(values.email, values.fullname, values.username, values.password).then(function (_ref2) {\n        var accessToken = _ref2.data.accessToken;\n        props.register(accessToken);\n      }).catch(function () {\n        setSubmitting(false);\n        setStatus(intl.formatMessage({\n          id: \"AUTH.VALIDATION.INVALID_LOGIN\"\n        }));\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        status = _ref3.status,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, status && /*#__PURE__*/React.createElement(\"div\", {\n      role: \"alert\",\n      className: \"alert alert-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, status)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      margin: \"normal\",\n      label: \"Fullname\",\n      className: \"kt-width-full\",\n      name: \"fullname\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.fullname,\n      helperText: touched.fullname && errors.fullname,\n      error: Boolean(touched.fullname && errors.fullname),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"Email\",\n      margin: \"normal\",\n      className: \"kt-width-full\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.email,\n      helperText: touched.email && errors.email,\n      error: Boolean(touched.email && errors.email),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      margin: \"normal\",\n      label: \"Username\",\n      className: \"kt-width-full\",\n      name: \"username\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.username,\n      helperText: touched.username && errors.username,\n      error: Boolean(touched.username && errors.username),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"password\",\n      margin: \"normal\",\n      label: \"Password\",\n      className: \"kt-width-full\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.password,\n      helperText: touched.password && errors.password,\n      error: Boolean(touched.password && errors.password),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"password\",\n      margin: \"normal\",\n      label: \"Confirm Password\",\n      className: \"kt-width-full\",\n      name: \"confirmPassword\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.confirmPassword,\n      helperText: touched.confirmPassword && errors.confirmPassword,\n      error: Boolean(touched.confirmPassword && errors.confirmPassword),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      label: /*#__PURE__*/React.createElement(React.Fragment, null, \"I agree the\", \" \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/terms\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 23\n        }\n      }, \"Terms & Conditions\")),\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        color: \"primary\",\n        name: \"acceptTerms\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        checked: values.acceptTerms,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-login__actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/forgot-password\",\n      className: \"kt-link kt-login__link-forgot\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"AUTH.GENERAL.FORGOT_BUTTON\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary btn-elevate kt-login__btn-secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, \"Back\")), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: isSubmitting || !values.acceptTerms,\n      className: \"btn btn-primary btn-elevate kt-login__btn-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, \"Submit\")));\n  })));\n}\n\nexport default injectIntl(connect(null, auth.actions)(Registration));","map":{"version":3,"sources":["/home/rosa/Desktop/admin/demo1/src/app/pages/auth/Registration.js"],"names":["React","Formik","connect","Link","FormattedMessage","injectIntl","Checkbox","FormControlLabel","TextField","auth","register","Registration","props","intl","email","fullname","username","password","acceptTerms","confirmPassword","values","errors","formatMessage","id","test","setStatus","setSubmitting","then","accessToken","data","catch","status","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Boolean","actions"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Checkbox, FormControlLabel, TextField } from \"@material-ui/core\";\r\nimport * as auth from \"../../store/ducks/auth.duck\";\r\nimport { register } from \"../../crud/auth.crud\";\r\n\r\nfunction Registration(props) {\r\n  const { intl } = props;\r\n\r\n  return (\r\n    <div className=\"kt-login__body\">\r\n      <div className=\"kt-login__form\">\r\n        <div className=\"kt-login__title\">\r\n          <h3>\r\n            <FormattedMessage id=\"AUTH.REGISTER.TITLE\" />\r\n          </h3>\r\n        </div>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            fullname: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            acceptTerms: true,\r\n            confirmPassword: \"\"\r\n          }}\r\n          validate={values => {\r\n            const errors = {};\r\n\r\n            if (!values.email) {\r\n              errors.email = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.INVALID_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.fullname) {\r\n              errors.fullname = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.username) {\r\n              errors.username = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.password) {\r\n              errors.password = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n              errors.confirmPassword = intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\r\n              });\r\n            } else if (values.password !== values.confirmPassword) {\r\n              errors.confirmPassword =\r\n                \"Password and Confirm Password didn't match.\";\r\n            }\r\n\r\n            if (!values.acceptTerms) {\r\n              errors.acceptTerms = \"Accept Terms\";\r\n            }\r\n\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setStatus, setSubmitting }) => {\r\n            register(\r\n              values.email,\r\n              values.fullname,\r\n              values.username,\r\n              values.password\r\n            )\r\n              .then(({ data: { accessToken } }) => {\r\n                props.register(accessToken);\r\n              })\r\n              .catch(() => {\r\n                setSubmitting(false);\r\n                setStatus(\r\n                  intl.formatMessage({\r\n                    id: \"AUTH.VALIDATION.INVALID_LOGIN\"\r\n                  })\r\n                );\r\n              });\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            status,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n              {status && (\r\n                <div role=\"alert\" className=\"alert alert-danger\">\r\n                  <div className=\"alert-text\">{status}</div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-0\">\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  label=\"Fullname\"\r\n                  className=\"kt-width-full\"\r\n                  name=\"fullname\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.fullname}\r\n                  helperText={touched.fullname && errors.fullname}\r\n                  error={Boolean(touched.fullname && errors.fullname)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group mb-0\">\r\n                <TextField\r\n                  label=\"Email\"\r\n                  margin=\"normal\"\r\n                  className=\"kt-width-full\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                  helperText={touched.email && errors.email}\r\n                  error={Boolean(touched.email && errors.email)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group mb-0\">\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  label=\"Username\"\r\n                  className=\"kt-width-full\"\r\n                  name=\"username\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.username}\r\n                  helperText={touched.username && errors.username}\r\n                  error={Boolean(touched.username && errors.username)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group mb-0\">\r\n                <TextField\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  label=\"Password\"\r\n                  className=\"kt-width-full\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.password}\r\n                  helperText={touched.password && errors.password}\r\n                  error={Boolean(touched.password && errors.password)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <TextField\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  label=\"Confirm Password\"\r\n                  className=\"kt-width-full\"\r\n                  name=\"confirmPassword\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.confirmPassword}\r\n                  helperText={touched.confirmPassword && errors.confirmPassword}\r\n                  error={Boolean(\r\n                    touched.confirmPassword && errors.confirmPassword\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group mb-0\">\r\n                <FormControlLabel\r\n                  label={\r\n                    <>\r\n                      I agree the{\" \"}\r\n                      <Link\r\n                        to=\"/terms\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        Terms & Conditions\r\n                      </Link>\r\n                    </>\r\n                  }\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"acceptTerms\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      checked={values.acceptTerms}\r\n                    />\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <div className=\"kt-login__actions\">\r\n                <Link\r\n                  to=\"/auth/forgot-password\"\r\n                  className=\"kt-link kt-login__link-forgot\"\r\n                >\r\n                  <FormattedMessage id=\"AUTH.GENERAL.FORGOT_BUTTON\" />\r\n                </Link>\r\n\r\n                <Link to=\"/auth\">\r\n                  <button type=\"button\" className=\"btn btn-secondary btn-elevate kt-login__btn-secondary\">\r\n                    Back\r\n                  </button>\r\n                </Link>\r\n\r\n                <button\r\n                  disabled={isSubmitting || !values.acceptTerms}\r\n                  className=\"btn btn-primary btn-elevate kt-login__btn-primary\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    null,\r\n    auth.actions\r\n  )(Registration)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}