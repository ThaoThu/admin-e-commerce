{"ast":null,"code":"import _slicedToArray from \"/home/rosa/Desktop/admin/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rosa/Desktop/admin/demo1/src/app/pages/home/google-material/utils/NoSSRExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Notice from \"../../../../partials/content/Notice\";\nimport CodeExample from \"../../../../partials/content/CodeExample\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { NoSsr, Button } from \"@material-ui/core\"; // Example 1\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      display: \"block\",\n      margin: theme.spacing(2)\n    }\n  };\n}; // Example 2\n\n\nvar useStyles = makeStyles({\n  container: {\n    maxWidth: 300,\n    wordBreak: \"break-all\"\n  }\n});\n\nfunction LargeTree() {\n  var _this = this;\n\n  return Array.from(new Array(3000)).map(function (_, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, \".\");\n  });\n}\n\nfunction NoSSRExamplesPage(props) {\n  // Example 1\n  var classes = props.classes; // Example 2\n\n  var classes2 = useStyles();\n\n  var _React$useState = React.useState({\n    open: false,\n    defer: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning kt-font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"kt-link\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/no-ssr/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(CodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Client side deferring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"In it's core, the NoSsr component purpose is to defer rendering. You can use it to defer the rendering from the server to the client.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Server & Client\"), /*#__PURE__*/React.createElement(NoSsr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Client only\")))))), /*#__PURE__*/React.createElement(CodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Frame deferring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"You can also use it to defer the rendering within the client itself. You can wait a screen frame with the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 50\n    }\n  }, \"defer\"), \" property to render the children. React does 2 commits instead of 1.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setState({\n        open: !state.open,\n        defer: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, 'Render NoSsr defer=\"false\"'), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setState({\n        open: !state.open,\n        defer: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, 'Render NoSsr defer=\"true\"'), state.open ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes2.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, \"Outside NoSsr\"), /*#__PURE__*/React.createElement(NoSsr, {\n    defer: state.defer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"....Inside NoSsr\", /*#__PURE__*/React.createElement(LargeTree, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }))) : null)))));\n}\n\nNoSSRExamplesPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NoSSRExamplesPage);\nvar jsCode1 = \"\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport NoSsr from '@material-ui/core/NoSsr';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = theme => ({\\n  button: {\\n    display: 'block',\\n    margin: theme.spacing(2),\\n  },\\n});\\n\\nfunction SimpleNoSsr(props) {\\n  const { classes } = props;\\n\\n  return (\\n    <div>\\n      <Button className={classes.button} variant=\\\"contained\\\" color=\\\"primary\\\">\\n        Server & Client\\n      </Button>\\n      <NoSsr>\\n        <Button className={classes.button} variant=\\\"contained\\\" color=\\\"secondary\\\">\\n          Client only\\n        </Button>\\n      </NoSsr>\\n    </div>\\n  );\\n}\\n\\nSimpleNoSsr.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(SimpleNoSsr);\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport NoSsr from '@material-ui/core/NoSsr';\\n\\nconst useStyles = makeStyles({\\n  container: {\\n    maxWidth: 300,\\n    wordBreak: 'break-all',\\n  },\\n});\\n\\nfunction LargeTree() {\\n  return Array.from(new Array(3000)).map((_, index) => <span key={index}>.</span>);\\n}\\n\\nfunction FrameDeferring() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({ open: false, defer: false });\\n\\n  return (\\n    <div>\\n      <button\\n        type=\\\"button\\\"\\n        onClick={() =>\\n          setState({\\n            open: !state.open,\\n            defer: false,\\n          })\\n        }\\n      >\\n        {'Render NoSsr defer=\\\"false\\\"'}\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        onClick={() =>\\n          setState({\\n            open: !state.open,\\n            defer: true,\\n          })\\n        }\\n      >\\n        {'Render NoSsr defer=\\\"true\\\"'}\\n      </button>\\n      {state.open ? (\\n        <div className={classes.container}>\\n          <span>Outside NoSsr</span>\\n          <NoSsr defer={state.defer}>\\n            ....Inside NoSsr\\n            <LargeTree />\\n          </NoSsr>\\n        </div>\\n      ) : null}\\n    </div>\\n  );\\n}\\n\\nexport default FrameDeferring;\\n\";","map":{"version":3,"sources":["/home/rosa/Desktop/admin/demo1/src/app/pages/home/google-material/utils/NoSSRExamplesPage.js"],"names":["React","PropTypes","Notice","CodeExample","makeStyles","withStyles","NoSsr","Button","styles","theme","button","display","margin","spacing","useStyles","container","maxWidth","wordBreak","LargeTree","Array","from","map","_","index","NoSSRExamplesPage","props","classes","classes2","useState","open","defer","state","setState","jsCode1","jsCode2","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notice from \"../../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../../partials/content/CodeExample\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { NoSsr, Button } from \"@material-ui/core\";\r\n\r\n// Example 1\r\nconst styles = theme => ({\r\n  button: {\r\n    display: \"block\",\r\n    margin: theme.spacing(2)\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    maxWidth: 300,\r\n    wordBreak: \"break-all\"\r\n  }\r\n});\r\n\r\nfunction LargeTree() {\r\n  return Array.from(new Array(3000)).map((_, index) => (\r\n    <span key={index}>.</span>\r\n  ));\r\n}\r\n\r\nfunction NoSSRExamplesPage(props) {\r\n  // Example 1\r\n  const { classes } = props;\r\n\r\n  // Example 2\r\n  const classes2 = useStyles();\r\n  const [state, setState] = React.useState({ open: false, defer: false });\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning kt-font-primary\">\r\n        <p>\r\n          NoSsr purposely removes components from the subject of Server Side\r\n          Rendering (SSR).\r\n        </p>\r\n        <p>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"kt-link\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/no-ssr/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </p>\r\n      </Notice>\r\n\r\n      <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Client side deferring\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            In it's core, the NoSsr component purpose is to defer rendering. You\r\n            can use it to defer the rendering from the server to the client.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <div>\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Server & Client\r\n              </Button>\r\n              <NoSsr>\r\n                <Button\r\n                  className={classes.button}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Client only\r\n                </Button>\r\n              </NoSsr>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <CodeExample jsCode={jsCode2} beforeCodeTitle=\"Frame deferring\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            You can also use it to defer the rendering within the client itself.\r\n            You can wait a screen frame with the <code>defer</code> property to\r\n            render the children. React does 2 commits instead of 1.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() =>\r\n                  setState({\r\n                    open: !state.open,\r\n                    defer: false\r\n                  })\r\n                }\r\n              >\r\n                {'Render NoSsr defer=\"false\"'}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() =>\r\n                  setState({\r\n                    open: !state.open,\r\n                    defer: true\r\n                  })\r\n                }\r\n              >\r\n                {'Render NoSsr defer=\"true\"'}\r\n              </button>\r\n              {state.open ? (\r\n                <div className={classes2.container}>\r\n                  <span>Outside NoSsr</span>\r\n                  <NoSsr defer={state.defer}>\r\n                    ....Inside NoSsr\r\n                    <LargeTree />\r\n                  </NoSsr>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nNoSSRExamplesPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NoSSRExamplesPage);\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    display: 'block',\r\n    margin: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction SimpleNoSsr(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.button} variant=\"contained\" color=\"primary\">\r\n        Server & Client\r\n      </Button>\r\n      <NoSsr>\r\n        <Button className={classes.button} variant=\"contained\" color=\"secondary\">\r\n          Client only\r\n        </Button>\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nSimpleNoSsr.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleNoSsr);\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    maxWidth: 300,\r\n    wordBreak: 'break-all',\r\n  },\r\n});\r\n\r\nfunction LargeTree() {\r\n  return Array.from(new Array(3000)).map((_, index) => <span key={index}>.</span>);\r\n}\r\n\r\nfunction FrameDeferring() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({ open: false, defer: false });\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() =>\r\n          setState({\r\n            open: !state.open,\r\n            defer: false,\r\n          })\r\n        }\r\n      >\r\n        {'Render NoSsr defer=\"false\"'}\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() =>\r\n          setState({\r\n            open: !state.open,\r\n            defer: true,\r\n          })\r\n        }\r\n      >\r\n        {'Render NoSsr defer=\"true\"'}\r\n      </button>\r\n      {state.open ? (\r\n        <div className={classes.container}>\r\n          <span>Outside NoSsr</span>\r\n          <NoSsr defer={state.defer}>\r\n            ....Inside NoSsr\r\n            <LargeTree />\r\n          </NoSsr>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FrameDeferring;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}