{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/rosa/Desktop/admin/demo1/src/app/router/Routes.js\";\n\n/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/pages/auth/AuthPage`, `src/pages/home/HomePage`).\r\n */\nimport React from \"react\";\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { useLastLocation } from \"react-router-last-location\";\nimport HomePage from \"../pages/home/HomePage\";\nimport ErrorsPage from \"../pages/errors/ErrorsPage\";\nimport LogoutPage from \"../pages/auth/Logout\";\nimport { LayoutContextProvider } from \"../../_metronic\";\nimport Layout from \"../../_metronic/layout/Layout\";\nimport * as routerHelpers from \"../router/RouterHelpers\";\nimport AuthPage from \"../pages/auth/AuthPage\";\nexport var Routes = withRouter(function (_ref) {\n  var history = _ref.history;\n  var lastLocation = useLastLocation();\n  routerHelpers.saveLastLocation(lastLocation);\n\n  var _useSelector = useSelector(function (_ref2) {\n    var auth = _ref2.auth,\n        urls = _ref2.urls,\n        menuConfig = _ref2.builder.menuConfig;\n    return {\n      menuConfig: menuConfig,\n      isAuthorized: auth.user != null,\n      userLastLocation: routerHelpers.getLastLocation()\n    };\n  }, shallowEqual),\n      isAuthorized = _useSelector.isAuthorized,\n      menuConfig = _useSelector.menuConfig,\n      userLastLocation = _useSelector.userLastLocation;\n\n  return (\n    /*#__PURE__*/\n\n    /* Create `LayoutContext` from current `history` and `menuConfig`. */\n    React.createElement(LayoutContextProvider, {\n      history: history,\n      menuConfig: menuConfig,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, !isAuthorized ?\n    /*#__PURE__*/\n\n    /* Render auth page when user at `/auth` and not authorized. */\n    React.createElement(AuthPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }) :\n    /*#__PURE__*/\n\n    /* Otherwise redirect to root page (`/`) */\n    React.createElement(Redirect, {\n      from: \"/auth\",\n      to: userLastLocation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/error\",\n      component: ErrorsPage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      component: LogoutPage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), !isAuthorized ?\n    /*#__PURE__*/\n\n    /* Redirect to `/auth` when user is not authorized */\n    React.createElement(Redirect, {\n      to: \"/auth/login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Layout, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HomePage, {\n      userLastLocation: userLastLocation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }))))\n  );\n});","map":{"version":3,"sources":["/home/rosa/Desktop/admin/demo1/src/app/router/Routes.js"],"names":["React","Redirect","Route","Switch","withRouter","shallowEqual","useSelector","useLastLocation","HomePage","ErrorsPage","LogoutPage","LayoutContextProvider","Layout","routerHelpers","AuthPage","Routes","history","lastLocation","saveLastLocation","auth","urls","menuConfig","builder","isAuthorized","user","userLastLocation","getLastLocation"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,qBAAT,QAAsC,iBAAtC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAO,KAAKC,aAAZ,MAA+B,yBAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAO,IAAMC,MAAM,GAAGX,UAAU,CAAC,gBAAiB;AAAA,MAAdY,OAAc,QAAdA,OAAc;AAChD,MAAMC,YAAY,GAAGV,eAAe,EAApC;AACAM,EAAAA,aAAa,CAACK,gBAAd,CAA+BD,YAA/B;;AAFgD,qBAGOX,WAAW,CAChE;AAAA,QAAGa,IAAH,SAAGA,IAAH;AAAA,QAASC,IAAT,SAASA,IAAT;AAAA,QAA0BC,UAA1B,SAAeC,OAAf,CAA0BD,UAA1B;AAAA,WAA8C;AAC5CA,MAAAA,UAAU,EAAVA,UAD4C;AAE5CE,MAAAA,YAAY,EAAEJ,IAAI,CAACK,IAAL,IAAa,IAFiB;AAG5CC,MAAAA,gBAAgB,EAAEZ,aAAa,CAACa,eAAd;AAH0B,KAA9C;AAAA,GADgE,EAMhErB,YANgE,CAHlB;AAAA,MAGxCkB,YAHwC,gBAGxCA,YAHwC;AAAA,MAG1BF,UAH0B,gBAG1BA,UAH0B;AAAA,MAGdI,gBAHc,gBAGdA,gBAHc;;AAYhD;AAAA;;AACE;AACA,wBAAC,qBAAD;AAAuB,MAAA,OAAO,EAAET,OAAhC;AAAyC,MAAA,UAAU,EAAEK,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACE,YAAD;AAAA;;AACC;AACA,wBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD;AAAA;;AAIC;AACA,wBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAEE,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eASE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEhB,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAYG,CAACa,YAAD;AAAA;;AACC;AACA,wBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,gBAIC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,gBAAgB,EAAEE,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBJ,CADF;AAFF;AA0BD,CAtC+B,CAAzB","sourcesContent":["/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/pages/auth/AuthPage`, `src/pages/home/HomePage`).\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport HomePage from \"../pages/home/HomePage\";\r\nimport ErrorsPage from \"../pages/errors/ErrorsPage\";\r\nimport LogoutPage from \"../pages/auth/Logout\";\r\nimport { LayoutContextProvider } from \"../../_metronic\";\r\nimport Layout from \"../../_metronic/layout/Layout\";\r\nimport * as routerHelpers from \"../router/RouterHelpers\";\r\nimport AuthPage from \"../pages/auth/AuthPage\";\r\n\r\nexport const Routes = withRouter(({ history }) => {\r\n  const lastLocation = useLastLocation();\r\n  routerHelpers.saveLastLocation(lastLocation);\r\n  const { isAuthorized, menuConfig, userLastLocation } = useSelector(\r\n    ({ auth, urls, builder: { menuConfig } }) => ({\r\n      menuConfig,\r\n      isAuthorized: auth.user != null,\r\n      userLastLocation: routerHelpers.getLastLocation()\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  return (\r\n    /* Create `LayoutContext` from current `history` and `menuConfig`. */\r\n    <LayoutContextProvider history={history} menuConfig={menuConfig}>\r\n      <Switch>\r\n        {!isAuthorized ? (\r\n          /* Render auth page when user at `/auth` and not authorized. */\r\n          <AuthPage />\r\n        ) : (\r\n          /* Otherwise redirect to root page (`/`) */\r\n          <Redirect from=\"/auth\" to={userLastLocation} />\r\n        )}\r\n\r\n        <Route path=\"/error\" component={ErrorsPage} />\r\n        <Route path=\"/logout\" component={LogoutPage} />\r\n\r\n        {!isAuthorized ? (\r\n          /* Redirect to `/auth` when user is not authorized */\r\n          <Redirect to=\"/auth/login\" />\r\n        ) : (\r\n          <Layout>\r\n            <HomePage userLastLocation={userLastLocation} />\r\n          </Layout>\r\n        )}\r\n      </Switch>\r\n    </LayoutContextProvider>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}