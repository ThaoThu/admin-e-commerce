{"ast":null,"code":"import _defineProperty from \"/home/rosa/Desktop/admin/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/rosa/Desktop/admin/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/rosa/Desktop/admin/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rosa/Desktop/admin/demo1/src/app/pages/home/google-material/navigation/DrawerExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport Notice from \"../../../../partials/content/Notice\";\nimport CodeExample from \"../../../../partials/content/CodeExample\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { List, ListItem, Divider, ListItemText, ListItemIcon, Button, Drawer, SwipeableDrawer } from \"@material-ui/core\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\"; // Example 1\n\nvar useStyles1 = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n}); // Example 2\n\nvar useStyles2 = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\nexport default function DrawerExamplesPage(props) {\n  var _this = this;\n\n  // Example 1\n  var classes1 = useStyles1();\n\n  var _React$useState = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state1 = _React$useState2[0],\n      setState1 = _React$useState2[1];\n\n  var toggleDrawer1 = function toggleDrawer1(side, open) {\n    return function (event) {\n      if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n        return;\n      }\n\n      setState1(_objectSpread(_objectSpread({}, state1), {}, _defineProperty({}, side, open)));\n    };\n  };\n\n  var sideList1 = function sideList1(side) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes1.list,\n      role: \"presentation\",\n      onClick: toggleDrawer1(side, false),\n      onKeyDown: toggleDrawer1(side, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, [\"All mail\", \"Trash\", \"Spam\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }));\n    })));\n  };\n\n  var fullList1 = function fullList1(side) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes1.fullList,\n      role: \"presentation\",\n      onClick: toggleDrawer1(side, false),\n      onKeyDown: toggleDrawer1(side, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, [\"All mail\", \"Trash\", \"Spam\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }));\n    })));\n  }; // Example 2\n\n\n  var classes2 = useStyles2();\n\n  var _React$useState3 = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state2 = _React$useState4[0],\n      setState2 = _React$useState4[1];\n\n  var toggleDrawer2 = function toggleDrawer2(side, open) {\n    return function (event) {\n      if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n        return;\n      }\n\n      setState2(_objectSpread(_objectSpread({}, state2), {}, _defineProperty({}, side, open)));\n    };\n  };\n\n  var sideList2 = function sideList2(side) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes2.list,\n      role: \"presentation\",\n      onClick: toggleDrawer2(side, false),\n      onKeyDown: toggleDrawer2(side, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, [\"All mail\", \"Trash\", \"Spam\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }));\n    })));\n  };\n\n  var fullList2 = function fullList2(side) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes2.fullList,\n      role: \"presentation\",\n      onClick: toggleDrawer2(side, false),\n      onKeyDown: toggleDrawer2(side, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, [\"All mail\", \"Trash\", \"Spam\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }));\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning kt-font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, \"Navigation drawers provide access to destinations in your app. Side sheets are surfaces containing supplementary content that are anchored to the left or right edge of the screen.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"kt-link\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/drawers/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Temporary drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, \"Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer1(\"left\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, \"Open Left\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer1(\"right\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }, \"Open Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer1(\"top\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, \"Open Top\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer1(\"bottom\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, \"Open Bottom\"), /*#__PURE__*/React.createElement(Drawer, {\n    open: state1.left,\n    onClose: toggleDrawer1(\"left\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, sideList1(\"left\")), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"top\",\n    open: state1.top,\n    onClose: toggleDrawer1(\"top\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 19\n    }\n  }, fullList1(\"top\")), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: state1.bottom,\n    onClose: toggleDrawer1(\"bottom\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, fullList1(\"bottom\")), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    open: state1.right,\n    onClose: toggleDrawer1(\"right\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }, sideList1(\"right\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Swipeable Temporary drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, \"You can make the drawer swipeable with the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, \"SwipeableDrawer\"), \" component.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer2(\"left\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, \"Open Left\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer2(\"right\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, \"Open Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer2(\"top\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 19\n    }\n  }, \"Open Top\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer2(\"bottom\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }, \"Open Bottom\"), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    open: state2.left,\n    onClose: toggleDrawer2(\"left\", false),\n    onOpen: toggleDrawer2(\"left\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, sideList2(\"left\")), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: \"top\",\n    open: state2.top,\n    onClose: toggleDrawer2(\"top\", false),\n    onOpen: toggleDrawer2(\"top\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 19\n    }\n  }, fullList2(\"top\")), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: \"bottom\",\n    open: state2.bottom,\n    onClose: toggleDrawer2(\"bottom\", false),\n    onOpen: toggleDrawer2(\"bottom\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  }, fullList2(\"bottom\")), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: \"right\",\n    open: state2.right,\n    onClose: toggleDrawer2(\"right\", false),\n    onOpen: toggleDrawer2(\"right\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 19\n    }\n  }, sideList2(\"right\")))))))), /*#__PURE__*/React.createElement(Notice, {\n    className: \"notice__paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }, \"See other examples in\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://material-ui.com/components/drawers/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, \"documentation\")));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Drawer from '@material-ui/core/Drawer';\\nimport Button from '@material-ui/core/Button';\\nimport List from '@material-ui/core/List';\\nimport Divider from '@material-ui/core/Divider';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\nimport MailIcon from '@material-ui/icons/Mail';\\n\\nconst useStyles = makeStyles({\\n  list: {\\n    width: 250,\\n  },\\n  fullList: {\\n    width: 'auto',\\n  },\\n});\\n\\nexport default function TemporaryDrawer() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({\\n    top: false,\\n    left: false,\\n    bottom: false,\\n    right: false,\\n  });\\n\\n  const toggleDrawer = (side, open) => event => {\\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\\n      return;\\n    }\\n\\n    setState({ ...state, [side]: open });\\n  };\\n\\n  const sideList = side => (\\n    <div\\n      className={classes.list}\\n      role=\\\"presentation\\\"\\n      onClick={toggleDrawer(side, false)}\\n      onKeyDown={toggleDrawer(side, false)}\\n    >\\n      <List>\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n      <Divider />\\n      <List>\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n    </div>\\n  );\\n\\n  const fullList = side => (\\n    <div\\n      className={classes.fullList}\\n      role=\\\"presentation\\\"\\n      onClick={toggleDrawer(side, false)}\\n      onKeyDown={toggleDrawer(side, false)}\\n    >\\n      <List>\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n      <Divider />\\n      <List>\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n    </div>\\n  );\\n\\n  return (\\n    <div>\\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\\n        {sideList('left')}\\n      </Drawer>\\n      <Drawer anchor=\\\"top\\\" open={state.top} onClose={toggleDrawer('top', false)}>\\n        {fullList('top')}\\n      </Drawer>\\n      <Drawer anchor=\\\"bottom\\\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\\n        {fullList('bottom')}\\n      </Drawer>\\n      <Drawer anchor=\\\"right\\\" open={state.right} onClose={toggleDrawer('right', false)}>\\n        {sideList('right')}\\n      </Drawer>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\\nimport Button from '@material-ui/core/Button';\\nimport List from '@material-ui/core/List';\\nimport Divider from '@material-ui/core/Divider';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\nimport MailIcon from '@material-ui/icons/Mail';\\n\\nconst useStyles = makeStyles({\\n  list: {\\n    width: 250,\\n  },\\n  fullList: {\\n    width: 'auto',\\n  },\\n});\\n\\nexport default function SwipeableTemporaryDrawer() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({\\n    top: false,\\n    left: false,\\n    bottom: false,\\n    right: false,\\n  });\\n\\n  const toggleDrawer = (side, open) => event => {\\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\\n      return;\\n    }\\n\\n    setState({ ...state, [side]: open });\\n  };\\n\\n  const sideList = side => (\\n    <div\\n      className={classes.list}\\n      role=\\\"presentation\\\"\\n      onClick={toggleDrawer(side, false)}\\n      onKeyDown={toggleDrawer(side, false)}\\n    >\\n      <List>\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n      <Divider />\\n      <List>\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n    </div>\\n  );\\n\\n  const fullList = side => (\\n    <div\\n      className={classes.fullList}\\n      role=\\\"presentation\\\"\\n      onClick={toggleDrawer(side, false)}\\n      onKeyDown={toggleDrawer(side, false)}\\n    >\\n      <List>\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n      <Divider />\\n      <List>\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n    </div>\\n  );\\n\\n  return (\\n    <div>\\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\\n      <SwipeableDrawer\\n        open={state.left}\\n        onClose={toggleDrawer('left', false)}\\n        onOpen={toggleDrawer('left', true)}\\n      >\\n        {sideList('left')}\\n      </SwipeableDrawer>\\n      <SwipeableDrawer\\n        anchor=\\\"top\\\"\\n        open={state.top}\\n        onClose={toggleDrawer('top', false)}\\n        onOpen={toggleDrawer('top', true)}\\n      >\\n        {fullList('top')}\\n      </SwipeableDrawer>\\n      <SwipeableDrawer\\n        anchor=\\\"bottom\\\"\\n        open={state.bottom}\\n        onClose={toggleDrawer('bottom', false)}\\n        onOpen={toggleDrawer('bottom', true)}\\n      >\\n        {fullList('bottom')}\\n      </SwipeableDrawer>\\n      <SwipeableDrawer\\n        anchor=\\\"right\\\"\\n        open={state.right}\\n        onClose={toggleDrawer('right', false)}\\n        onOpen={toggleDrawer('right', true)}\\n      >\\n        {sideList('right')}\\n      </SwipeableDrawer>\\n    </div>\\n  );\\n}\\n\";","map":{"version":3,"sources":["/home/rosa/Desktop/admin/demo1/src/app/pages/home/google-material/navigation/DrawerExamplesPage.js"],"names":["React","Notice","CodeExample","makeStyles","List","ListItem","Divider","ListItemText","ListItemIcon","Button","Drawer","SwipeableDrawer","MailIcon","InboxIcon","useStyles1","list","width","fullList","useStyles2","DrawerExamplesPage","props","classes1","useState","top","left","bottom","right","state1","setState1","toggleDrawer1","side","open","event","type","key","sideList1","map","text","index","fullList1","classes2","state2","setState2","toggleDrawer2","sideList2","fullList2","jsCode1","jsCode2"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport Notice from \"../../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../../partials/content/CodeExample\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Button,\r\n  Drawer,\r\n  SwipeableDrawer\r\n} from \"@material-ui/core\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  }\r\n});\r\n\r\nexport default function DrawerExamplesPage(props) {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [state1, setState1] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n\r\n  const toggleDrawer1 = (side, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState1({ ...state1, [side]: open });\r\n  };\r\n\r\n  const sideList1 = side => (\r\n    <div\r\n      className={classes1.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer1(side, false)}\r\n      onKeyDown={toggleDrawer1(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList1 = side => (\r\n    <div\r\n      className={classes1.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer1(side, false)}\r\n      onKeyDown={toggleDrawer1(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [state2, setState2] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n\r\n  const toggleDrawer2 = (side, open) => event => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState2({ ...state2, [side]: open });\r\n  };\r\n\r\n  const sideList2 = side => (\r\n    <div\r\n      className={classes2.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer2(side, false)}\r\n      onKeyDown={toggleDrawer2(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList2 = side => (\r\n    <div\r\n      className={classes2.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer2(side, false)}\r\n      onKeyDown={toggleDrawer2(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning kt-font-primary\">\r\n        <p>\r\n          Navigation drawers provide access to destinations in your app. Side\r\n          sheets are surfaces containing supplementary content that are anchored\r\n          to the left or right edge of the screen.\r\n        </p>\r\n        <p>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"kt-link\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/drawers/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </p>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Temporary drawer\">\r\n            <div className=\"kt-section\">\r\n              <span className=\"kt-section__sub\">\r\n                Temporary navigation drawers can toggle open or closed. Closed\r\n                by default, the drawer opens temporarily above all other content\r\n                until a section is selected.\r\n              </span>\r\n              <div className=\"kt-separator kt-separator--dashed\"></div>\r\n              <div className=\"kt-section__content\">\r\n                <div>\r\n                  <Button onClick={toggleDrawer1(\"left\", true)}>\r\n                    Open Left\r\n                  </Button>\r\n                  <Button onClick={toggleDrawer1(\"right\", true)}>\r\n                    Open Right\r\n                  </Button>\r\n                  <Button onClick={toggleDrawer1(\"top\", true)}>Open Top</Button>\r\n                  <Button onClick={toggleDrawer1(\"bottom\", true)}>\r\n                    Open Bottom\r\n                  </Button>\r\n                  <Drawer\r\n                    open={state1.left}\r\n                    onClose={toggleDrawer1(\"left\", false)}\r\n                  >\r\n                    {sideList1(\"left\")}\r\n                  </Drawer>\r\n                  <Drawer\r\n                    anchor=\"top\"\r\n                    open={state1.top}\r\n                    onClose={toggleDrawer1(\"top\", false)}\r\n                  >\r\n                    {fullList1(\"top\")}\r\n                  </Drawer>\r\n                  <Drawer\r\n                    anchor=\"bottom\"\r\n                    open={state1.bottom}\r\n                    onClose={toggleDrawer1(\"bottom\", false)}\r\n                  >\r\n                    {fullList1(\"bottom\")}\r\n                  </Drawer>\r\n                  <Drawer\r\n                    anchor=\"right\"\r\n                    open={state1.right}\r\n                    onClose={toggleDrawer1(\"right\", false)}\r\n                  >\r\n                    {sideList1(\"right\")}\r\n                  </Drawer>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <CodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Swipeable Temporary drawer\"\r\n          >\r\n            <div className=\"kt-section\">\r\n              <span className=\"kt-section__sub\">\r\n                You can make the drawer swipeable with the{\" \"}\r\n                <code>SwipeableDrawer</code> component.\r\n              </span>\r\n              <div className=\"kt-separator kt-separator--dashed\"></div>\r\n              <div className=\"kt-section__content\">\r\n                <div>\r\n                  <Button onClick={toggleDrawer2(\"left\", true)}>\r\n                    Open Left\r\n                  </Button>\r\n                  <Button onClick={toggleDrawer2(\"right\", true)}>\r\n                    Open Right\r\n                  </Button>\r\n                  <Button onClick={toggleDrawer2(\"top\", true)}>Open Top</Button>\r\n                  <Button onClick={toggleDrawer2(\"bottom\", true)}>\r\n                    Open Bottom\r\n                  </Button>\r\n                  <SwipeableDrawer\r\n                    open={state2.left}\r\n                    onClose={toggleDrawer2(\"left\", false)}\r\n                    onOpen={toggleDrawer2(\"left\", true)}\r\n                  >\r\n                    {sideList2(\"left\")}\r\n                  </SwipeableDrawer>\r\n                  <SwipeableDrawer\r\n                    anchor=\"top\"\r\n                    open={state2.top}\r\n                    onClose={toggleDrawer2(\"top\", false)}\r\n                    onOpen={toggleDrawer2(\"top\", true)}\r\n                  >\r\n                    {fullList2(\"top\")}\r\n                  </SwipeableDrawer>\r\n                  <SwipeableDrawer\r\n                    anchor=\"bottom\"\r\n                    open={state2.bottom}\r\n                    onClose={toggleDrawer2(\"bottom\", false)}\r\n                    onOpen={toggleDrawer2(\"bottom\", true)}\r\n                  >\r\n                    {fullList2(\"bottom\")}\r\n                  </SwipeableDrawer>\r\n                  <SwipeableDrawer\r\n                    anchor=\"right\"\r\n                    open={state2.right}\r\n                    onClose={toggleDrawer2(\"right\", false)}\r\n                    onOpen={toggleDrawer2(\"right\", true)}\r\n                  >\r\n                    {sideList2(\"right\")}\r\n                  </SwipeableDrawer>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CodeExample>\r\n        </div>\r\n      </div>\r\n\r\n      <Notice className=\"notice__paragraph\">\r\n        See other examples in{\" \"}\r\n        <a href=\"https://material-ui.com/components/drawers/\">documentation</a>\r\n      </Notice>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList = side => (\r\n    <div\r\n      className={classes.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\r\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\r\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\r\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\r\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n        {sideList('left')}\r\n      </Drawer>\r\n      <Drawer anchor=\"top\" open={state.top} onClose={toggleDrawer('top', false)}>\r\n        {fullList('top')}\r\n      </Drawer>\r\n      <Drawer anchor=\"bottom\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\r\n        {fullList('bottom')}\r\n      </Drawer>\r\n      <Drawer anchor=\"right\" open={state.right} onClose={toggleDrawer('right', false)}>\r\n        {sideList('right')}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList = side => (\r\n    <div\r\n      className={classes.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\r\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\r\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\r\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\r\n      <SwipeableDrawer\r\n        open={state.left}\r\n        onClose={toggleDrawer('left', false)}\r\n        onOpen={toggleDrawer('left', true)}\r\n      >\r\n        {sideList('left')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor=\"top\"\r\n        open={state.top}\r\n        onClose={toggleDrawer('top', false)}\r\n        onOpen={toggleDrawer('top', true)}\r\n      >\r\n        {fullList('top')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor=\"bottom\"\r\n        open={state.bottom}\r\n        onClose={toggleDrawer('bottom', false)}\r\n        onOpen={toggleDrawer('bottom', true)}\r\n      >\r\n        {fullList('bottom')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor=\"right\"\r\n        open={state.right}\r\n        onClose={toggleDrawer('right', false)}\r\n        onOpen={toggleDrawer('right', true)}\r\n      >\r\n        {sideList('right')}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}