{"ast":null,"code":"var _jsxFileName = \"/home/rosa/Desktop/admin/demo1/src/index.js\";\n\n/**\r\n * Create React App entry point. This and `public/index.html` files can not be\r\n * changed or moved.\r\n */\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { mockAxios, setupAxios } from \"./_metronic\";\nimport store, { persistor } from \"./app/store/store\";\nimport App from \"./App\";\nimport \"./index.scss\"; // Standard version\n// import \"./sass/style.react.rtl.css\"; // RTL version\n\nimport \"socicon/css/socicon.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./_metronic/_assets/plugins/line-awesome/css/line-awesome.css\";\nimport \"./_metronic/_assets/plugins/flaticon/flaticon.css\";\nimport \"./_metronic/_assets/plugins/flaticon2/flaticon.css\";\n/**\r\n * Base URL of the website.\r\n *\r\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\r\n */\n\nvar PUBLIC_URL = process.env.PUBLIC_URL;\n/**\r\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\r\n * basic Metronic mocks and returns it.\r\n *\r\n * @see https://github.com/ctimmerm/axios-mock-adapter\r\n */\n\n/* const mock = */\n\nmockAxios(axios);\n/**\r\n * Inject metronic interceptors for axios.\r\n *\r\n * @see https://github.com/axios/axios#interceptors\r\n */\n\nsetupAxios(axios, store);\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  store: store,\n  persistor: persistor,\n  basename: PUBLIC_URL,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/rosa/Desktop/admin/demo1/src/index.js"],"names":["React","ReactDOM","axios","mockAxios","setupAxios","store","persistor","App","PUBLIC_URL","process","env","render","document","getElementById"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAO,yBAAP;AACA,OAAO,2BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,aAAtC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,mBAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,cAAP,C,CAAuB;AACvB;;AACA,OAAO,yBAAP;AACA,OAAO,+CAAP;AACA,OAAO,+DAAP;AACA,OAAO,mDAAP;AACA,OAAO,oDAAP;AACA;AACA;AACA;AACA;AACA;;IACQC,U,GAAeC,OAAO,CAACC,G,CAAvBF,U;AAER;AACA;AACA;AACA;AACA;AACA;;AACA;;AAAmBL,SAAS,CAACD,KAAD,CAAT;AAEnB;AACA;AACA;AACA;AACA;;AACAE,UAAU,CAACF,KAAD,EAAQG,KAAR,CAAV;AAEAJ,QAAQ,CAACU,MAAT,eACE,oBAAC,GAAD;AACE,EAAA,KAAK,EAAEN,KADT;AAEE,EAAA,SAAS,EAAEC,SAFb;AAGE,EAAA,QAAQ,EAAEE,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAMEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["/**\r\n * Create React App entry point. This and `public/index.html` files can not be\r\n * changed or moved.\r\n */\r\nimport \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { mockAxios, setupAxios } from \"./_metronic\";\r\nimport store, { persistor } from \"./app/store/store\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\"; // Standard version\r\n// import \"./sass/style.react.rtl.css\"; // RTL version\r\nimport \"socicon/css/socicon.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"./_metronic/_assets/plugins/line-awesome/css/line-awesome.css\";\r\nimport \"./_metronic/_assets/plugins/flaticon/flaticon.css\";\r\nimport \"./_metronic/_assets/plugins/flaticon2/flaticon.css\";\r\n/**\r\n * Base URL of the website.\r\n *\r\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\r\n */\r\nconst { PUBLIC_URL } = process.env;\r\n\r\n/**\r\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\r\n * basic Metronic mocks and returns it.\r\n *\r\n * @see https://github.com/ctimmerm/axios-mock-adapter\r\n */\r\n/* const mock = */ mockAxios(axios);\r\n\r\n/**\r\n * Inject metronic interceptors for axios.\r\n *\r\n * @see https://github.com/axios/axios#interceptors\r\n */\r\nsetupAxios(axios, store);\r\n\r\nReactDOM.render(\r\n  <App\r\n    store={store}\r\n    persistor={persistor}\r\n    basename={PUBLIC_URL}\r\n  />,\r\n  document.getElementById(\"root\")\r\n);\r\n"]},"metadata":{},"sourceType":"module"}