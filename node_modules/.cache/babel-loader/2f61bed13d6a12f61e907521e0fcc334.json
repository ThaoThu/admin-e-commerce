{"ast":null,"code":"import _slicedToArray from \"/home/rosa/Desktop/admin/demo1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rosa/Desktop/admin/demo1/src/app/pages/home/google-material/labs/ToggleButtonExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport Notice from \"../../../../partials/content/Notice\";\nimport CodeExample from \"../../../../partials/content/CodeExample\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport FormatAlignLeftIcon from \"@material-ui/icons/FormatAlignLeft\";\nimport FormatAlignCenterIcon from \"@material-ui/icons/FormatAlignCenter\";\nimport FormatAlignRightIcon from \"@material-ui/icons/FormatAlignRight\";\nimport FormatAlignJustifyIcon from \"@material-ui/icons/FormatAlignJustify\";\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\nimport FormatColorFillIcon from \"@material-ui/icons/FormatColorFill\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\"; // Example 1\n\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    toggleContainer: {\n      margin: theme.spacing(2, 0)\n    }\n  };\n});\nexport default function ToggleButtonExamplesPage() {\n  // Example 1\n  var _React$useState = React.useState(\"left\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      alignment1 = _React$useState2[0],\n      setAlignment1 = _React$useState2[1];\n\n  var _React$useState3 = React.useState(function () {\n    return [\"bold\"];\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      formats1 = _React$useState4[0],\n      setFormats1 = _React$useState4[1];\n\n  var handleFormat1 = function handleFormat1(event, newFormats) {\n    setFormats1(newFormats);\n  };\n\n  var handleAlignment1 = function handleAlignment1(event, newAlignment) {\n    setAlignment1(newAlignment);\n  };\n\n  var classes1 = useStyles1(); // Example 2\n\n  var _React$useState5 = React.useState(\"left\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      alignment2 = _React$useState6[0],\n      setAlignment2 = _React$useState6[1];\n\n  var handleChange2 = function handleChange2(event, newAlignment) {\n    setAlignment2(newAlignment);\n  };\n\n  var children2 = [/*#__PURE__*/React.createElement(ToggleButton, {\n    key: 1,\n    value: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    key: 2,\n    value: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignCenterIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    key: 3,\n    value: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    key: 4,\n    value: \"justify\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignJustifyIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }))];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning kt-font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"kt-link\",\n    rel: \"noopener noreferrer\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"demos & documentation\")), /*#__PURE__*/React.createElement(Notice, {\n    className: \"notice__paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Toggle buttons can be used to group related options.\"), /*#__PURE__*/React.createElement(CodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Toggle Buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"To emphasize groups of related Toggle buttons, a group should share a common container.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"kt-section__sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"ToggleButtonGroup\"), \" will control the selected of its child buttons when given its own \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 46\n    }\n  }, \"value\"), \" prop.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes1.toggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: alignment1,\n    exclusive: true,\n    onChange: handleAlignment1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignCenterIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"justify\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignJustifyIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"Exclusive Selection\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Text justification toggle buttons present options for left, right, center, full, and justified text with only one item available for selection at a time. Selecting one option deselects any other.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes1.toggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: formats1,\n    onChange: handleFormat1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatBoldIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatItalicIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"underlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatUnderlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    disabled: true,\n    value: \"color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatColorFillIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Multiple Selection\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Logically-grouped options, like Bold, Italic, and Underline, allow multiple options to be selected.\")))))), /*#__PURE__*/React.createElement(CodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Sizes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"kt-section__sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Fancy larger or smaller buttons? Use the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 54\n    }\n  }, \"size\"), \" property.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-separator kt-separator--dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-section__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    size: \"small\",\n    value: alignment2,\n    exclusive: true,\n    onChange: handleChange2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, children2)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    size: \"medium\",\n    value: alignment2,\n    exclusive: true,\n    onChange: handleChange2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, children2)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    size: \"large\",\n    value: alignment2,\n    exclusive: true,\n    onChange: handleChange2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, children2)))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\nimport Typography from '@material-ui/core/Typography';\\nimport Grid from '@material-ui/core/Grid';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\n\\nconst useStyles = makeStyles(theme => ({\\n  toggleContainer: {\\n    margin: theme.spacing(2, 0),\\n  },\\n}));\\n\\nexport default function ToggleButtons() {\\n  const [alignment, setAlignment] = React.useState('left');\\n  const [formats, setFormats] = React.useState(() => ['bold']);\\n\\n  const handleFormat = (event, newFormats) => {\\n    setFormats(newFormats);\\n  };\\n\\n  const handleAlignment = (event, newAlignment) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  const classes = useStyles();\\n\\n  return (\\n    <Grid container spacing={2}>\\n      <Grid item sm={12} md={6}>\\n        <div className={classes.toggleContainer}>\\n          <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment}>\\n            <ToggleButton value=\\\"left\\\">\\n              <FormatAlignLeftIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\\\"center\\\">\\n              <FormatAlignCenterIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\\\"right\\\">\\n              <FormatAlignRightIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\\\"justify\\\" disabled>\\n              <FormatAlignJustifyIcon />\\n            </ToggleButton>\\n          </ToggleButtonGroup>\\n        </div>\\n        <Typography gutterBottom>Exclusive Selection</Typography>\\n        <Typography>\\n          Text justification toggle buttons present options for left, right, center, full, and\\n          justified text with only one item available for selection at a time. Selecting one option\\n          deselects any other.\\n        </Typography>\\n      </Grid>\\n      <Grid item sm={12} md={6}>\\n        <div className={classes.toggleContainer}>\\n          <ToggleButtonGroup value={formats} onChange={handleFormat}>\\n            <ToggleButton value=\\\"bold\\\">\\n              <FormatBoldIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\\\"italic\\\">\\n              <FormatItalicIcon />\\n            </ToggleButton>\\n            <ToggleButton value=\\\"underlined\\\">\\n              <FormatUnderlinedIcon />\\n            </ToggleButton>\\n            <ToggleButton disabled value=\\\"color\\\">\\n              <FormatColorFillIcon />\\n              <ArrowDropDownIcon />\\n            </ToggleButton>\\n          </ToggleButtonGroup>\\n        </div>\\n        <Typography gutterBottom>Multiple Selection</Typography>\\n        <Typography>\\n          Logically-grouped options, like Bold, Italic, and Underline, allow multiple options to be\\n          selected.\\n        </Typography>\\n      </Grid>\\n    </Grid>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\nimport Grid from '@material-ui/core/Grid';\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\n\\nexport default function ToggleButtonSizes() {\\n  const [alignment, setAlignment] = React.useState('left');\\n\\n  const handleChange = (event, newAlignment) => {\\n    setAlignment(newAlignment);\\n  };\\n\\n  const children = [\\n    <ToggleButton key={1} value=\\\"left\\\">\\n      <FormatAlignLeftIcon />\\n    </ToggleButton>,\\n    <ToggleButton key={2} value=\\\"center\\\">\\n      <FormatAlignCenterIcon />\\n    </ToggleButton>,\\n    <ToggleButton key={3} value=\\\"right\\\">\\n      <FormatAlignRightIcon />\\n    </ToggleButton>,\\n    <ToggleButton key={4} value=\\\"justify\\\" disabled>\\n      <FormatAlignJustifyIcon />\\n    </ToggleButton>,\\n  ];\\n\\n  return (\\n    <Grid container spacing={2} direction=\\\"column\\\" alignItems=\\\"center\\\">\\n      <Grid item>\\n        <ToggleButtonGroup size=\\\"small\\\" value={alignment} exclusive onChange={handleChange}>\\n          {children}\\n        </ToggleButtonGroup>\\n      </Grid>\\n      <Grid item>\\n        <ToggleButtonGroup size=\\\"medium\\\" value={alignment} exclusive onChange={handleChange}>\\n          {children}\\n        </ToggleButtonGroup>\\n      </Grid>\\n      <Grid item>\\n        <ToggleButtonGroup size=\\\"large\\\" value={alignment} exclusive onChange={handleChange}>\\n          {children}\\n        </ToggleButtonGroup>\\n      </Grid>\\n    </Grid>\\n  );\\n}\\n\";","map":{"version":3,"sources":["/home/rosa/Desktop/admin/demo1/src/app/pages/home/google-material/labs/ToggleButtonExamplesPage.js"],"names":["React","Notice","CodeExample","makeStyles","Grid","Typography","ToggleButton","ToggleButtonGroup","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","FormatColorFillIcon","ArrowDropDownIcon","useStyles1","theme","toggleContainer","margin","spacing","ToggleButtonExamplesPage","useState","alignment1","setAlignment1","formats1","setFormats1","handleFormat1","event","newFormats","handleAlignment1","newAlignment","classes1","alignment2","setAlignment2","handleChange2","children2","jsCode1","jsCode2"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport Notice from \"../../../../partials/content/Notice\";\r\nimport CodeExample from \"../../../../partials/content/CodeExample\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport FormatAlignLeftIcon from \"@material-ui/icons/FormatAlignLeft\";\r\nimport FormatAlignCenterIcon from \"@material-ui/icons/FormatAlignCenter\";\r\nimport FormatAlignRightIcon from \"@material-ui/icons/FormatAlignRight\";\r\nimport FormatAlignJustifyIcon from \"@material-ui/icons/FormatAlignJustify\";\r\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\r\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\r\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\r\nimport FormatColorFillIcon from \"@material-ui/icons/FormatColorFill\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  toggleContainer: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nexport default function ToggleButtonExamplesPage() {\r\n  // Example 1\r\n  const [alignment1, setAlignment1] = React.useState(\"left\");\r\n  const [formats1, setFormats1] = React.useState(() => [\"bold\"]);\r\n\r\n  const handleFormat1 = (event, newFormats) => {\r\n    setFormats1(newFormats);\r\n  };\r\n\r\n  const handleAlignment1 = (event, newAlignment) => {\r\n    setAlignment1(newAlignment);\r\n  };\r\n\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const [alignment2, setAlignment2] = React.useState(\"left\");\r\n\r\n  const handleChange2 = (event, newAlignment) => {\r\n    setAlignment2(newAlignment);\r\n  };\r\n\r\n  const children2 = [\r\n    <ToggleButton key={1} value=\"left\">\r\n      <FormatAlignLeftIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={2} value=\"center\">\r\n      <FormatAlignCenterIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={3} value=\"right\">\r\n      <FormatAlignRightIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={4} value=\"justify\" disabled>\r\n      <FormatAlignJustifyIcon />\r\n    </ToggleButton>\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning kt-font-primary\">\r\n        For more info please check the components's official{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          className=\"kt-link\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"\"\r\n        >\r\n          demos & documentation\r\n        </a>\r\n      </Notice>\r\n\r\n      <Notice className=\"notice__paragraph\">\r\n        Toggle buttons can be used to group related options.\r\n      </Notice>\r\n\r\n      <CodeExample jsCode={jsCode1} beforeCodeTitle=\"Toggle Buttons\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            To emphasize groups of related Toggle buttons, a group should share\r\n            a common container.\r\n          </span>\r\n          <p className=\"kt-section__sub\">\r\n            The <code>ToggleButtonGroup</code> will control the selected of its\r\n            child buttons when given its own <code>value</code> prop.\r\n          </p>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <Grid container spacing={2}>\r\n              <Grid item sm={12} md={6}>\r\n                <div className={classes1.toggleContainer}>\r\n                  <ToggleButtonGroup\r\n                    value={alignment1}\r\n                    exclusive\r\n                    onChange={handleAlignment1}\r\n                  >\r\n                    <ToggleButton value=\"left\">\r\n                      <FormatAlignLeftIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\">\r\n                      <FormatAlignCenterIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\">\r\n                      <FormatAlignRightIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\" disabled>\r\n                      <FormatAlignJustifyIcon />\r\n                    </ToggleButton>\r\n                  </ToggleButtonGroup>\r\n                </div>\r\n                <Typography gutterBottom>Exclusive Selection</Typography>\r\n                <Typography>\r\n                  Text justification toggle buttons present options for left,\r\n                  right, center, full, and justified text with only one item\r\n                  available for selection at a time. Selecting one option\r\n                  deselects any other.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item sm={12} md={6}>\r\n                <div className={classes1.toggleContainer}>\r\n                  <ToggleButtonGroup value={formats1} onChange={handleFormat1}>\r\n                    <ToggleButton value=\"bold\">\r\n                      <FormatBoldIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"italic\">\r\n                      <FormatItalicIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"underlined\">\r\n                      <FormatUnderlinedIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton disabled value=\"color\">\r\n                      <FormatColorFillIcon />\r\n                      <ArrowDropDownIcon />\r\n                    </ToggleButton>\r\n                  </ToggleButtonGroup>\r\n                </div>\r\n                <Typography gutterBottom>Multiple Selection</Typography>\r\n                <Typography>\r\n                  Logically-grouped options, like Bold, Italic, and Underline,\r\n                  allow multiple options to be selected.\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n\r\n      <CodeExample jsCode={jsCode2} beforeCodeTitle=\"Sizes\">\r\n        <div className=\"kt-section\">\r\n          <span className=\"kt-section__sub\">\r\n            Fancy larger or smaller buttons? Use the <code>size</code> property.\r\n          </span>\r\n          <div className=\"kt-separator kt-separator--dashed\"></div>\r\n          <div className=\"kt-section__content\">\r\n            <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n              <Grid item>\r\n                <ToggleButtonGroup\r\n                  size=\"small\"\r\n                  value={alignment2}\r\n                  exclusive\r\n                  onChange={handleChange2}\r\n                >\r\n                  {children2}\r\n                </ToggleButtonGroup>\r\n              </Grid>\r\n              <Grid item>\r\n                <ToggleButtonGroup\r\n                  size=\"medium\"\r\n                  value={alignment2}\r\n                  exclusive\r\n                  onChange={handleChange2}\r\n                >\r\n                  {children2}\r\n                </ToggleButtonGroup>\r\n              </Grid>\r\n              <Grid item>\r\n                <ToggleButtonGroup\r\n                  size=\"large\"\r\n                  value={alignment2}\r\n                  exclusive\r\n                  onChange={handleChange2}\r\n                >\r\n                  {children2}\r\n                </ToggleButtonGroup>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </CodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toggleContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nexport default function ToggleButtons() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n  const [formats, setFormats] = React.useState(() => ['bold']);\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item sm={12} md={6}>\r\n        <div className={classes.toggleContainer}>\r\n          <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment}>\r\n            <ToggleButton value=\"left\">\r\n              <FormatAlignLeftIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"center\">\r\n              <FormatAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"right\">\r\n              <FormatAlignRightIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"justify\" disabled>\r\n              <FormatAlignJustifyIcon />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n        <Typography gutterBottom>Exclusive Selection</Typography>\r\n        <Typography>\r\n          Text justification toggle buttons present options for left, right, center, full, and\r\n          justified text with only one item available for selection at a time. Selecting one option\r\n          deselects any other.\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item sm={12} md={6}>\r\n        <div className={classes.toggleContainer}>\r\n          <ToggleButtonGroup value={formats} onChange={handleFormat}>\r\n            <ToggleButton value=\"bold\">\r\n              <FormatBoldIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"italic\">\r\n              <FormatItalicIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"underlined\">\r\n              <FormatUnderlinedIcon />\r\n            </ToggleButton>\r\n            <ToggleButton disabled value=\"color\">\r\n              <FormatColorFillIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n        <Typography gutterBottom>Multiple Selection</Typography>\r\n        <Typography>\r\n          Logically-grouped options, like Bold, Italic, and Underline, allow multiple options to be\r\n          selected.\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtonSizes() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n\r\n  const handleChange = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const children = [\r\n    <ToggleButton key={1} value=\"left\">\r\n      <FormatAlignLeftIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={2} value=\"center\">\r\n      <FormatAlignCenterIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={3} value=\"right\">\r\n      <FormatAlignRightIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={4} value=\"justify\" disabled>\r\n      <FormatAlignJustifyIcon />\r\n    </ToggleButton>,\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n      <Grid item>\r\n        <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleChange}>\r\n          {children}\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n      <Grid item>\r\n        <ToggleButtonGroup size=\"medium\" value={alignment} exclusive onChange={handleChange}>\r\n          {children}\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n      <Grid item>\r\n        <ToggleButtonGroup size=\"large\" value={alignment} exclusive onChange={handleChange}>\r\n          {children}\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}